{"version":3,"sources":["poll.svg","constants/index.js","util/APIUtils.js","common/LoadingIndicator.js","run/RunList.js","run/NewRun.js","post/NewPost.js","user/login/Login.js","user/signup/Signup.js","util/Colors.js","common/NotFound.js","common/ServerError.js","post/PostList.js","user/profile/Profile.js","user/profile/EditProfile.js","common/AppHeader.js","common/PrivateRoute.js","app/App.js","serviceWorker.js","index.js"],"names":["module","exports","API_BASE_URL","ACCESS_TOKEN","NAME_MIN_LENGTH","NAME_MAX_LENGTH","LOCATION_MIN_LENGTH","LOCATION_MAX_LENGTH","AGE_MIN","AGE_MAX","EMAIL_MAX_LENGTH","PASSWORD_MIN_LENGTH","PASSWORD_MAX_LENGTH","request","options","headers","Headers","localStorage","getItem","append","defaults","Object","assign","fetch","url","then","response","json","ok","Promise","reject","catch","error","console","log","LoadingIndicator","props","antIcon","type","style","fontSize","spin","indicator","display","textAlign","marginTop","RunList","state","runs","filtered","isLoading","loadRunList","bind","handleDelete","handleChange","handleJoin","promise","userId","this","currentUser","id","method","setState","event","itemId","preventDefault","filter","item","notification","success","message","description","to","pathname","from","location","runId","runData","body","JSON","stringify","e","newList","target","value","lc","toLowerCase","includes","className","length","onChange","placeholder","itemLayout","size","pagination","pageSize","dataSource","renderItem","Item","key","actions","userRun","onClick","Meta","title","creationDateTime","Component","withRouter","FormItem","TextArea","NewRun","validateTitle","titleText","validateStatus","errorMsg","validateLocation","locationText","handleDateChange","time","defaultValue","handleSubmit","handleTitleChange","handleLocationChange","isFormInvalid","createRun","history","push","status","handleLogout","validationFun","onSubmit","help","name","autoComplete","showTime","format","htmlType","disabled","NewPost","validateContent","contentText","content","handleContentChange","postData","createPost","Login","AntWrappedLoginForm","create","LoginForm","onLogin","form","validateFields","err","values","loginRequest","login","setItem","accessToken","getFieldDecorator","rules","required","prefix","Signup","validateName","validationStatus","validateEmail","email","RegExp","test","validateAge","age","validatePassword","password","handleInputChange","handleAgeChange","validateEmailAvailability","inputName","inputValue","signupRequest","signup","label","hasFeedback","onBlur","emailValue","emailValidation","available","colors","getAvatarColor","substr","hash","i","charCodeAt","index","Math","abs","NotFound","ServerError","PostList","posts","loadPostList","TabPane","Profile","user","loadUserProfile","getUserProfile","notFound","serverError","backgroundColor","toUpperCase","defaultActiveKey","animated","tabBarStyle","tab","EditProfile","editRequest","editData","Header","AppHeader","handleMenuClick","onLogout","menuItems","src","pollIcon","alt","ProfileDropdownMenu","mode","selectedKeys","lineHeight","dropdownMenu","Divider","overlay","trigger","getPopupContainer","document","getElementsByClassName","marginRight","PrivateRoute","component","authenticated","rest","render","Content","App","isAuthenticated","loadCurrentUser","handleLogin","config","placement","top","duration","redirectTo","notificationType","removeItem","exact","path","Boolean","window","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.38d40414.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/poll.4aa941b9.svg\";","export const API_BASE_URL = 'http://Runbook-env.jcsnnv3uqe.ap-northeast-1.elasticbeanstalk.com:8089';\nexport const ACCESS_TOKEN = 'accessToken';\n\n\nexport const NAME_MIN_LENGTH = 4;\nexport const NAME_MAX_LENGTH = 40;\n\nexport const LOCATION_MIN_LENGTH = 3;\nexport const LOCATION_MAX_LENGTH = 40;\n\nexport const AGE_MIN = 16;\nexport const AGE_MAX = 120;\n\nexport const EMAIL_MAX_LENGTH = 60;\n\nexport const PASSWORD_MIN_LENGTH = 4;\nexport const PASSWORD_MAX_LENGTH = 20;","import { API_BASE_URL, ACCESS_TOKEN } from '../constants';\n\nconst request = (options) => {\n    const headers = new Headers({\n        'Content-Type': 'application/json',\n    })\n\n    if (localStorage.getItem(ACCESS_TOKEN) != null) {\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\n    }\n\n    const defaults = { headers: headers };\n    options = Object.assign({}, defaults, options);\n    return fetch(options.url, options)\n        .then(response =>\n            response.json().then(json => {\n                if (!response.ok) {\n                    return Promise.reject(json);\n                }\n                return json;\n            }) .catch(error => {\n                console.log(error);\n        }))\n};\n\nexport function getAllRuns() {\n    return request({\n        url: API_BASE_URL + \"/joinruns\",\n        method: 'GET'\n    });\n}\n\nexport function getUserCreatedRuns(userId) {\n    return request({\n        url: API_BASE_URL + \"/users/\" + userId + \"/runs\",\n        method: 'GET'   \n    });\n}\n\nexport function createRun(userId, runData) {\n    return request({\n        url: API_BASE_URL + \"/users/\" + userId + \"/runs\",\n        method: 'POST',\n        body: JSON.stringify(runData)\n    });\n}\n\nexport function joinRun(userId, runId, runData) {\n    return request({\n        url: API_BASE_URL + \"/users/\" + userId + \"/joinrun/\" + runId,\n        method: 'PUT',\n        body: JSON.stringify(runData)\n    });\n}\n\nexport function exitRun(userId, runId, runData) {\n    return request({\n        url: API_BASE_URL + \"/users/\" + userId + \"/exitrun/\" + runId,\n        method: 'POST',\n        body: JSON.stringify(runData)\n    });\n}\n\nexport function deleteRun(runId) {\n    return request({\n        url: API_BASE_URL + \"/runs/\" + runId,\n        method: 'DELETE',\n    });\n}\n\n\nexport function createPost(userId, postData) {\n    return request({\n        url: API_BASE_URL + \"/users/\" + userId + \"/posts\",\n        method: 'POST',\n        body: JSON.stringify(postData)\n    });\n}\n\nexport function deletePost(userId, postId) {\n    return request({\n        url: API_BASE_URL + \"/users/\" + userId + \"/posts/\" +postId,\n        method: 'DELETE',\n    });\n}\n\nexport function getUserCreatedPosts(userId) {\n    return request({\n        url: API_BASE_URL + \"/users/\" + userId + \"/posts\",\n        method: 'GET'\n    });\n}\n\nexport function login(loginRequest) {\n    return request({\n        url: API_BASE_URL + \"/auth/signin\",\n        method: 'POST',\n        body: JSON.stringify(loginRequest)\n    });\n}\n\nexport function editProfile(userId, editRequest) {\n    return request({\n        url: API_BASE_URL + \"/users/\" + userId,\n        method: 'PUT',\n        body: JSON.stringify(editRequest)\n    });\n}\n\nexport function signup(signupRequest) {\n    return request({\n        url: API_BASE_URL + \"/auth/signup\",\n        method: 'POST',\n        body: JSON.stringify(signupRequest)\n    });\n}\n\n\nexport function checkEmailAvailability(email) {\n    return request({\n        url: API_BASE_URL + \"/users/checkemailavailability?email=\" + email,\n        method: 'GET'\n    });\n}\n\n\nexport function getCurrentUser() {\n    if (!localStorage.getItem(ACCESS_TOKEN)) {\n        return Promise.reject(\"No access token set.\");\n    }\n\n    return request({\n        url: API_BASE_URL + \"/users/me\",\n        method: 'GET'\n    });\n}\n\nexport function getUserProfile(userId) {\n    return request({\n        url: API_BASE_URL + \"/users/\" + userId,\n        method: 'GET'\n    });\n}\n","import React from 'react';\nimport { Spin, Icon } from 'antd';\n\nexport default function LoadingIndicator(props) {\n    const antIcon = <Icon type=\"loading-3-quarters\" style={{ fontSize: 30 }} spin />;\n    return (\n        <Spin indicator={antIcon} style = {{display: 'block', textAlign: 'center', marginTop: 30}} />\n    );\n}","import React, { Component } from 'react';\nimport { getAllRuns, getUserCreatedRuns, deleteRun, joinRun } from '../util/APIUtils';\nimport LoadingIndicator  from '../common/LoadingIndicator';\nimport { Button, Icon, notification, List} from 'antd';\nimport { withRouter,  Redirect} from 'react-router-dom';\nimport './RunList.css';\n\nclass RunList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            runs: [],\n            filtered: [],\n            isLoading: false,\n        };\n        this.loadRunList = this.loadRunList.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleJoin = this.handleJoin.bind(this)\n    }\n\n    loadRunList() {\n        let promise;\n        if(typeof this.props.currentUser != \"undefined\" && this.props.type != \"ALL_RUNS\") {\n                promise = getUserCreatedRuns(this.props.currentUser.id);\n        } else {\n            promise = getAllRuns();\n        }\n\n        if(!promise) {\n            return;\n        }\n\n        this.setState({\n            isLoading: true\n        });\n\n        promise            \n        .then(response => {\n            this.setState({\n                runs: response,\n                filtered:response,\n                isLoading: false\n            })\n        }).catch(error => {\n            this.setState({\n                isLoading: false\n            })\n        });  \n        \n    }\n\n    handleDelete(event, itemId) {\n        event.preventDefault();\n        deleteRun(itemId);\n        this.setState({\n            filtered : this.state.runs.filter(item => item.id !== itemId)\n        });\n        notification.success({\n            message: 'RunBook',\n            description: \"Thank you! You have successfully deleted a run event!\",\n        });\n      }\n\n    componentDidMount() {\n        this.loadRunList();\n        this.setState({\n            filtered: this.state.runs\n          });\n    }\n\n    handleJoin(event, item){\n        if (typeof this.props.currentUser != \"undefined\"){\n            event.preventDefault();\n            joinRun(this.props.currentUser.id, item.id, item)\n            notification.success({\n                message: 'RunBook',\n                description: \"Thank you! You have successfully joined a run event!\",\n            });\n        } else { return <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: this.props.location }\n            }}/>}\n    }\n\n\n\n\n    handleChange(e) {        \n        // Variable to hold the original version of the list\n        let currentList = [];\n            // Variable to hold the filtered list before putting into state\n        let newList = [];\n\n            // If the search bar isn't empty\n        if (e.target.value !== \"\") {\n                // Assign the original list to currentList\n        currentList = this.state.runs;\n\n                // Use .filter() to determine which items should be displayed\n                // based on the search terms\n        newList = currentList.filter(item => {\n                    // change current item to lowercase\n            const lc = item.location.toLowerCase();\n                    // change search term to lowercase\n            \n            const filter = e.target.value.toLowerCase();\n                    // check to see if the current list item includes the search term\n                    // If it does, it will be added to newList. Using lowercase eliminates\n                    // issues with capitalization in search terms and search content\n            return lc.includes(filter);\n        });\n        console.log(newList);\n        } else {\n                // If the search bar is empty, set newList to original task list\n        newList = this.state.runs;\n        }\n            // Set the filtered state based on what our rules added to newList\n        this.setState({\n        filtered: newList\n        });\n  }\n\n\n    render() {\n\n        return (\n            <div className=\"runs-container\">\n                {\n                    !this.state.isLoading && this.state.runs.length === 0 ? (\n                        <div className=\"no-runs-found\">\n                            <br/>   \n                            <span>No Runs Found.</span>\n                        </div>    \n                    ): null\n                }  \n                {\n                    this.state.isLoading ? \n                    <LoadingIndicator />: null                     \n                }\n                <div className=\"runs-list-scroll\">\n                <div>\n                    <br/>\n                    <input type=\"text\" className=\"search-input\" onChange={this.handleChange} placeholder=\"Search Run Locations ...\" />\n                    <ul>\n                    ...\n                    </ul>\n                </div>  \n                <List\n                    itemLayout=\"vertical\"\n                    size=\"large\"\n                    pagination={{\n                    pageSize: 5,\n                    }}\n                    dataSource={this.state.filtered}\n                    renderItem={item => (\n                        <List.Item\n                        key={item.id}\n                        actions={this.props.currentUser && this.props.userRun ? [\n                            <Icon type=\"delete\" key=\"list-vertical-delete\" onClick = {(event) => this.handleDelete(event,item.id)}/>,\n                    ] : [ <Icon type=\"user-add\" key=\"list-vertical-user-add\" onClick = {(event) => this.handleJoin(event,item)} />]} >\n                        <List.Item.Meta\n                        title={item.title}\n                        />\n                        Location: {item.location} \n                        <br />\n                        Time: {item.creationDateTime}\n                    </List.Item>\n                    )}\n                />\n                \n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(RunList);","import React, { Component } from 'react';\nimport { createRun } from '../util/APIUtils';\nimport './NewRun.css';  \nimport {LOCATION_MIN_LENGTH, LOCATION_MAX_LENGTH} from '../constants/index';\nimport { Form, Input, Button, DatePicker, notification } from 'antd';\nconst FormItem = Form.Item;\nconst { TextArea } = Input\n\nclass NewRun extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: {\n                value: ''\n            },\n            location: {\n                value: ''\n            },\n\n            creationDateTime: {\n                defaultValue: '01-10-2019 - 9:45'\n            }\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleTitleChange = this.handleTitleChange.bind(this);\n        this.handleLocationChange = this.handleLocationChange.bind(this);\n        this.handleDateChange = this.handleDateChange.bind(this);\n        this.isFormInvalid = this.isFormInvalid.bind(this);\n        this.currentUser = this.props.currentUser;\n    }\n\n\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const runData = {\n            title : this.state.title.value,\n            location: this.state.location.value,\n            creationDateTime: this.state.creationDateTime.value \n        };\n        createRun(this.props.currentUser.id, runData) \n\n        .then(response => {\n            notification.success({\n                message: 'RunBook',\n                description: \"Thank you! You have successfully created a run event!\",\n            });          \n            this.props.history.push(\"/mypage\");\n        }).catch(error => {\n            if(error.status === 401) {\n                this.props.handleLogout('/login', 'error', 'You have been logged out. Please login create run.');    \n            } else {\n                notification.error({\n                    message: 'Running App',\n                    description: error.message || 'Sorry! Something went wrong. Please try again!'\n                });              \n            }\n        });\n    }\n\n    validateTitle = (titleText) => {\n        if(titleText.length === 0) {\n            return {\n                validateStatus: 'error',\n                errorMsg: 'Please enter your title!'\n            }\n        } else {\n            return {\n                validateStatus: 'success',\n                errorMsg: null\n            }\n        }\n    }\n\n    validateLocation = (locationText) => {\n        if(locationText.length === 0) {\n            return {\n                validateStatus: 'error',\n                errorMsg: 'Please enter your location!'\n            }\n        } else if (locationText.length > LOCATION_MAX_LENGTH) {\n            return {\n                validateStatus: 'error',\n                errorMsg: `Location is too long (Maximum ${LOCATION_MAX_LENGTH} characters allowed)`\n            }    \n        } else if (locationText.length < LOCATION_MIN_LENGTH) {\n            return {\n                validateStatus: 'error',\n                errorMsg: `Location is too short (Minimum ${LOCATION_MIN_LENGTH} characters needed)`\n            }    \n        } else {\n            return {\n                validateStatus: 'success',\n                errorMsg: null\n            }\n        }\n    }\n\n    handleDateChange = (value, time) => {\n        this.setState(\n            {\n                creationDateTime: {\n                value: time,\n                }\n            }\n        );\n      };\n\n    handleTitleChange(event,validationFun) {\n        const value = event.target.value;\n        this.setState({\n            title: {\n                value: value,\n                ...validationFun(value)\n            }\n        });\n    }\n\n    handleLocationChange(event,validationFun) {\n        const value = event.target.value;\n        this.setState({\n            location: {\n                value: value,\n                ...validationFun(value)\n            }\n        });\n    }\n\n\n\n    isFormInvalid() {\n        if(this.state.title.validateStatus !== 'success' && this.state.location.validateStatus !== 'success') {\n            return true;\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"new-run-container\">\n                <h1 className=\"page-title\">Create Run</h1>\n                <div className=\"new-run-content\">\n                    <Form onSubmit={this.handleSubmit} className=\"create-run-form\">\n                        <FormItem validateStatus={this.state.title.validateStatus}\n                            help={this.state.title.errorMsg} className=\"run-form-row\">\n                        <TextArea \n                            placeholder=\"Enter your title\"\n                            style = {{ fontSize: '22px' }} \n                            name = \"title\"\n                            autoComplete=\"off\"\n                            value = {this.state.title.value}\n                            onChange = {(event) => this.handleTitleChange(event, this.validateTitle)} />\n                        </FormItem>\n                        <FormItem validateStatus={this.state.location.validateStatus}\n                            help={this.state.location.errorMsg} className=\"run-form-row\">\n                        <TextArea \n                            placeholder=\"Enter your location\"\n                            style = {{ fontSize: '16px' }} \n                            name = \"location\"\n                            autoComplete=\"off\"\n                            value = {this.state.location.value}\n                            onChange = {(event) => this.handleLocationChange(event, this.validateLocation)} />\n                        </FormItem>\n\n                        <FormItem className=\"run-form-row\">\n                            <DatePicker\n                                    showTime\n                                    format=\"DD-MM-YYYY - HH:mm\"\n                                    onChange={this.handleDateChange}\n                                    />\n                        </FormItem>\n                        <FormItem className=\"run-form-row\">\n                            <Button type=\"primary\" \n                                htmlType=\"submit\" \n                                size=\"large\" \n                                disabled={this.isFormInvalid()}\n                                className=\"create-run-form-button\">Create Run</Button>\n                        </FormItem>\n                    </Form>\n                </div>    \n            </div>\n        );\n    }\n}\n\n\n\nexport default NewRun;","import React, { Component } from 'react';\nimport { createPost } from '../util/APIUtils';\nimport './NewPost.css';  \nimport { Form, Input, Button, DatePicker, notification } from 'antd';\nconst FormItem = Form.Item;\nconst { TextArea } = Input\n\nclass NewPost extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: {\n                value: ''\n            },\n            content: {\n                value: ''\n            },\n\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleTitleChange = this.handleTitleChange.bind(this);\n        this.handleContentChange = this.handleContentChange.bind(this);\n        this.isFormInvalid = this.isFormInvalid.bind(this);\n        this.currentUser = this.props.currentUser;\n    }\n\n\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const postData = {\n            title : this.state.title.value,\n            content: this.state.content.value,\n        };\n        createPost(this.props.currentUser.id, postData) \n\n        .then(response => {\n            notification.success({\n                message: 'RunBook',\n                description: \"Thank you! You have successfully created a post event!\",\n            });          \n            this.props.history.push(\"/mypage\");\n        }).catch(error => {\n            if(error.status === 401) {\n                this.props.handleLogout('/login', 'error', 'You have been logged out. Please login create post.');    \n            } else {\n                notification.error({\n                    message: 'RunBook',\n                    description: error.message || 'Sorry! Something went wrong. Please try again!'\n                });              \n            }\n        });\n    }\n\n    validateTitle = (titleText) => {\n        if(titleText.length === 0) {\n            return {\n                validateStatus: 'error',\n                errorMsg: 'Please enter your title!'\n            }\n        } else {\n            return {\n                validateStatus: 'success',\n                errorMsg: null\n            }\n        }\n    }\n\n    validateContent = (contentText) => {\n        if(contentText.length === 0) {\n            return {\n                validateStatus: 'error',\n                errorMsg: 'Please enter your content!'\n            }\n        } else {\n            return {\n                validateStatus: 'success',\n                errorMsg: null\n            }\n        }\n    }\n\n    handleTitleChange(event,validationFun) {\n        const value = event.target.value;\n        this.setState({\n            title: {\n                value: value,\n                ...validationFun(value)\n            }\n        });\n    }\n\n    handleContentChange(event,validationFun) {\n        const value = event.target.value;\n        this.setState({\n            content: {\n                value: value,\n                ...validationFun(value)\n            }\n        });\n    }\n\n\n\n    isFormInvalid() {\n        if(this.state.title.validateStatus !== 'success' && this.state.content.validateStatus !== 'success') {\n            return true;\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"new-post-container\">\n                <h1 className=\"page-title\">Create Post</h1>\n                <div className=\"new-post-content\">\n                    <Form onSubmit={this.handleSubmit} className=\"create-post-form\">\n                        <FormItem validateStatus={this.state.title.validateStatus}\n                            help={this.state.title.errorMsg} className=\"post-form-row\">\n                        <TextArea \n                            placeholder=\"Enter your title\"\n                            style = {{ fontSize: '22px' }} \n                            name = \"title\"\n                            autoComplete=\"off\"\n                            value = {this.state.title.value}\n                            onChange = {(event) => this.handleTitleChange(event, this.validateTitle)} />\n                        </FormItem>\n                        <FormItem validateStatus={this.state.content.validateStatus}\n                            help={this.state.content.errorMsg} className=\"post-form-row\">\n                                \n                        <TextArea \n                            placeholder=\"Enter your content\"\n                            style = {{ fontSize: '16px' }} \n                            name = \"content\"\n                            autoComplete=\"off\"\n                            value = {this.state.content.value}\n                            onChange = {(event) => this.handleContentChange(event, this.validateContent)} />\n                        </FormItem>\n\n                        <FormItem className=\"post-form-row\">\n                            <Button type=\"primary\" \n                                htmlType=\"submit\" \n                                size=\"large\" \n                                disabled={this.isFormInvalid()}\n                                className=\"create-post-form-button\">Create Post</Button>\n                        </FormItem>\n                    </Form>\n                </div>    \n            </div>\n        );\n    }\n}\n\n\n\nexport default NewPost;","import React, { Component } from 'react';\nimport { login } from '../../util/APIUtils';\nimport './Login.css';\nimport { Link } from 'react-router-dom';\nimport { ACCESS_TOKEN } from '../../constants';\n\nimport { Form, Input, Button, Icon, notification } from 'antd';\nconst FormItem = Form.Item;\n\nclass Login extends Component {\n    render() {\n        const AntWrappedLoginForm = Form.create()(LoginForm)\n        return (\n            <div className=\"login-container\">\n                <h1 className=\"page-title\">Login</h1>\n                <div className=\"login-content\">\n                    <AntWrappedLoginForm onLogin={this.props.onLogin} />\n                </div>\n            </div>\n        );\n    }\n}\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();   \n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                const loginRequest = Object.assign({}, values);\n                login(loginRequest)\n                .then(response => {\n                    localStorage.setItem(ACCESS_TOKEN, response.accessToken);\n                    this.props.onLogin();\n                }).catch(error => {\n                    if(error.status === 401) {\n                        notification.error({\n                            message: 'RunBook',\n                            description: 'Your Email or Password is incorrect. Please try again!'\n                        });                    \n                    } else {\n                        notification.error({\n                            message: 'RunBook',\n                            description: error.message || 'Sorry! Something went wrong. Please try again!'\n                        });                                            \n                    }\n                });\n            }\n        });\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                <FormItem>\n                    {getFieldDecorator('email', {\n                        rules: [{ required: true, message: 'Please input your email!' }],\n                    })(\n                    <Input \n                        prefix={<Icon type=\"user\" />}\n                        size=\"large\"\n                        name=\"email\" \n                        placeholder=\"Email\" />    \n                    )}\n                </FormItem>\n                <FormItem>\n                {getFieldDecorator('password', {\n                    rules: [{ required: true, message: 'Please input your Password!' }],\n                })(\n                    <Input \n                        prefix={<Icon type=\"lock\" />}\n                        size=\"large\"\n                        name=\"password\" \n                        type=\"password\" \n                        placeholder=\"Password\"  />                        \n                )}\n                </FormItem>\n                <FormItem>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\" className=\"login-form-button\">Login</Button>\n                    Or <Link to=\"/signup\">register now!</Link>\n                </FormItem>\n            </Form>\n        );\n    }\n}\n\n\nexport default Login;","import React, { Component } from 'react';\nimport { signup, checkEmailAvailability } from '../../util/APIUtils';\nimport './Signup.css';\nimport { Link } from 'react-router-dom';\nimport { \n    NAME_MIN_LENGTH, NAME_MAX_LENGTH, \n    LOCATION_MIN_LENGTH, LOCATION_MAX_LENGTH,\n    EMAIL_MAX_LENGTH,\n    PASSWORD_MIN_LENGTH, PASSWORD_MAX_LENGTH,\n    AGE_MAX ,AGE_MIN\n} from '../../constants';\n\nimport { Form, Input, Button, notification, InputNumber } from 'antd';\nconst FormItem = Form.Item;\n\nclass Signup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: {\n                value: ''\n            },\n            location: {\n                value: ''\n            },\n            age: {\n                value: null\n            },\n            email: {\n                value: ''\n            },\n            password: {\n                value: ''\n            }\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleAgeChange = this.handleAgeChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.validateEmailAvailability = this.validateEmailAvailability.bind(this);\n        this.isFormInvalid = this.isFormInvalid.bind(this);\n    }\n\n    handleInputChange(event, validationFun) {\n        const target = event.target;\n        const inputName = target.name;        \n        const inputValue = target.value;\n\n        this.setState({\n            [inputName] : {\n                value: inputValue,\n                ...validationFun(inputValue)\n            }\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n    \n        const signupRequest = {\n            name: this.state.name.value,\n            email: this.state.email.value,\n            age: this.state.age.value,\n            location: this.state.location.value,\n            password: this.state.password.value\n        };\n        signup(signupRequest)\n        .then(response => {\n            notification.success({\n                message: 'RunBook',\n                description: \"Thank you! You're successfully registered. Please Login to continue!\",\n            });          \n            this.props.history.push(\"/login\");\n        }).catch(error => {\n            notification.error({\n                message: 'Runbook',\n                description: error.message || 'Sorry! Something went wrong. Please try again!'\n            });\n        });\n    }\n\n    isFormInvalid() {\n        return !(this.state.name.validateStatus === 'success' &&\n            this.state.location.validateStatus === 'success' &&\n            this.state.email.validateStatus === 'success' &&\n            this.state.password.validateStatus === 'success'\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"signup-container\">\n                <h1 className=\"page-title\">Sign Up</h1>\n                <div className=\"signup-content\">\n                    <Form onSubmit={this.handleSubmit} className=\"signup-form\">\n                        <FormItem \n                            label=\"Full Name\"\n                            validateStatus={this.state.name.validateStatus}\n                            help={this.state.name.errorMsg}>\n                            <Input \n                                size=\"large\"\n                                name=\"name\"\n                                autoComplete=\"off\"\n                                placeholder=\"Your full name\"\n                                value={this.state.name.value} \n                                onChange={(event) => this.handleInputChange(event, this.validateName)} />    \n                        </FormItem>\n                        <FormItem label=\"Location\"\n                            validateStatus={this.state.location.validateStatus}\n                            help={this.state.location.errorMsg}>\n                            <Input \n                                size=\"large\"\n                                name=\"location\" \n                                autoComplete=\"off\"\n                                placeholder=\"User Location\"\n                                value={this.state.location.value} \n                                onChange={(event) => this.handleInputChange(event, this.validateLocation)} />    \n                        </FormItem>\n                        <FormItem label=\"Age\"\n                            validateStatus={this.state.age.validateStatus}\n                            help={this.state.age.errorMsg}>\n                            <InputNumber \n                                size=\"large\"\n                                name=\"age\" \n                                type=\"number\" \n                                autoComplete=\"off\"\n                                placeholder=\"16\"\n                                value={this.state.age.value} \n                                onChange={this.handleAgeChange} />    \n                        </FormItem>\n                        <FormItem \n                            label=\"Email\"\n                            hasFeedback\n                            validateStatus={this.state.email.validateStatus}\n                            help={this.state.email.errorMsg}>\n                            <Input \n                                size=\"large\"\n                                name=\"email\" \n                                type=\"email\" \n                                autoComplete=\"off\"\n                                placeholder=\"Your email\"\n                                value={this.state.email.value} \n                                onBlur={this.validateEmailAvailability}\n                                onChange={(event) => this.handleInputChange(event, this.validateEmail)} />    \n                        </FormItem>\n                        <FormItem \n                            label=\"Password\"\n                            validateStatus={this.state.password.validateStatus}\n                            help={this.state.password.errorMsg}>\n                            <Input \n                                size=\"large\"\n                                name=\"password\" \n                                type=\"password\"\n                                autoComplete=\"off\"\n                                placeholder=\"A password between 4 to 20 characters\" \n                                value={this.state.password.value} \n                                onChange={(event) => this.handleInputChange(event, this.validatePassword)} />    \n                        </FormItem>\n                \n                        <FormItem>\n                            <Button type=\"primary\" \n                                htmlType=\"submit\" \n                                size=\"large\" \n                                className=\"signup-form-button\"\n                                disabled={this.isFormInvalid()}>Sign up</Button>\n                            Already registered? <Link to=\"/login\">Login now!</Link>\n                        </FormItem>\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n    // Validation Functions\n\n    validateName = (name) => {\n        if(name.length < NAME_MIN_LENGTH) {\n            return {\n                validateStatus: 'error',\n                errorMsg: `Name is too short (Minimum ${NAME_MIN_LENGTH} characters needed.)`\n            }\n        } else if (name.length > NAME_MAX_LENGTH) {\n            return {\n                validationStatus: 'error',\n                errorMsg: `Name is too long (Maximum ${NAME_MAX_LENGTH} characters allowed.)`\n            }\n        } else {\n            return {\n                validateStatus: 'success',\n                errorMsg: null,\n              };            \n        }\n    }\n\n    validateEmail = (email) => {\n        if(!email) {\n            return {\n                validateStatus: 'error',\n                errorMsg: 'Email may not be empty'                \n            }\n        }\n\n        const EMAIL_REGEX = RegExp('[^@ ]+@[^@ ]+\\\\.[^@ ]+');\n        if(!EMAIL_REGEX.test(email)) {\n            return {\n                validateStatus: 'error',\n                errorMsg: 'Email not valid'\n            }\n        }\n\n        if(email.length > EMAIL_MAX_LENGTH) {\n            return {\n                validateStatus: 'error',\n                errorMsg: `Email is too long (Maximum ${EMAIL_MAX_LENGTH} characters allowed)`\n            }\n        }\n\n        return {\n            validateStatus: null,\n            errorMsg: null\n        }\n    }\n\n    validateLocation = (location) => {\n        if(location.length < LOCATION_MIN_LENGTH) {\n            return {\n                validateStatus: 'error',\n                errorMsg: `location is too short (Minimum ${LOCATION_MIN_LENGTH} characters needed.)`\n            }\n        } else if (location.length > LOCATION_MAX_LENGTH) {\n            return {\n                validationStatus: 'error',\n                errorMsg: `Location is too long (Maximum ${LOCATION_MAX_LENGTH} characters allowed.)`\n            }\n        } else {\n            return {\n                validateStatus: 'success',\n                errorMsg: null\n            }\n        }\n    }\n\n    handleAgeChange(inputValue) {\n        const inputName = 'age';       \n        this.setState({\n            [inputName] : {\n                value: inputValue,\n                ...this.validateAge(inputValue)\n            }\n        });\n    }\n\n    validateAge = (age) => {\n        if(age < AGE_MIN) {\n            return {\n                validateStatus: 'error',\n                errorMsg: `Age is too short (Minimum ${AGE_MIN}  needed.)`\n            }\n        } else if (age > AGE_MAX) {\n            return {\n                validationStatus: 'error',\n                errorMsg: `Age is too much (Maximum ${AGE_MAX} allowed.)`\n            }\n        } else {\n            return {\n                validateStatus: 'success',\n                errorMsg: null\n            }\n        }\n    }\n\n\n    validateEmailAvailability() {\n        // First check for client side errors in email\n        const emailValue = this.state.email.value;\n        const emailValidation = this.validateEmail(emailValue);\n\n        if(emailValidation.validateStatus === 'error') {\n            this.setState({\n                email: {\n                    value: emailValue,\n                    ...emailValidation\n                }\n            });    \n            return;\n        }\n\n        this.setState({\n            email: {\n                value: emailValue,\n                validateStatus: 'validating',\n                errorMsg: null\n            }\n        });\n\n        checkEmailAvailability(emailValue)\n        .then(response => {\n            if(response.available) {\n                this.setState({\n                    email: {\n                        value: emailValue,\n                        validateStatus: 'success',\n                        errorMsg: null\n                    }\n                });\n            } else {\n                this.setState({\n                    email: {\n                        value: emailValue,\n                        validateStatus: 'error',\n                        errorMsg: 'This Email is already registered'\n                    }\n                });\n            }   \n        }).catch(error => {\n            // Marking validateStatus as success, Form will be rechecked at server\n            this.setState({\n                email: {\n                    value: emailValue,\n                    validateStatus: 'success',\n                    errorMsg: null\n                }\n            });\n        });\n    }\n\n    validatePassword = (password) => {\n        if(password.length < PASSWORD_MIN_LENGTH) {\n            return {\n                validateStatus: 'error',\n                errorMsg: `Password is too short (Minimum ${PASSWORD_MIN_LENGTH} characters needed.)`\n            }\n        } else if (password.length > PASSWORD_MAX_LENGTH) {\n            return {\n                validationStatus: 'error',\n                errorMsg: `Password is too long (Maximum ${PASSWORD_MAX_LENGTH} characters allowed.)`\n            }\n        } else {\n            return {\n                validateStatus: 'success',\n                errorMsg: null,\n            };            \n        }\n    }\n\n}\n\n    \n\nexport default Signup;","const colors = [\n    '#F44336', '#e91e63', '#9c27b0', '#673ab7',\n    '#ff9800', '#ff5722', '#795548', '#607d8b',\n    '#3f51b5', '#2196F3', '#00bcd4', '#009688',\n    '#2196F3', '#32c787', '#00BCD4', '#ff5652',\n    '#ffc107', '#ff85af', '#FF9800', '#39bbb0',\n    '#4CAF50', '#ffeb3b', '#ffc107',\n];\n\nexport function getAvatarColor(name) {\n    name = name.substr(0, 6);\n\n    var hash = 0;\n    for (var i = 0; i < name.length; i++) {\n        hash = 31 * hash + name.charCodeAt(i);\n    }\n    var index = Math.abs(hash % colors.length);\n    return colors[index];\n}","import React, { Component } from 'react';\nimport './NotFound.css';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'antd';\n\nclass NotFound extends Component {\n    render() {\n        return (\n            <div className=\"page-not-found\">\n                <h1 className=\"title\">\n                    404\n                </h1>\n                <div className=\"desc\">\n                    The Page you're looking for was not found.\n                </div>\n                <Link to=\"/\"><Button className=\"go-back-btn\" type=\"primary\" size=\"large\">Go Back</Button></Link>\n            </div>\n        );\n    }\n}\nexport default NotFound;","import React, { Component } from 'react';\nimport './ServerError.css';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'antd';\n\nclass ServerError extends Component {\n    render() {\n        return (\n            <div className=\"server-error-page\">\n                <h1 className=\"server-error-title\">\n                    500\n                </h1>\n                <div className=\"server-error-desc\">\n                    Oops! Something went wrong at our Server. Why don't you go back?\n                </div>\n                <Link to=\"/\"><Button className=\"server-error-go-back-btn\" type=\"primary\" size=\"large\">Go Back</Button></Link>\n            </div>\n        );\n    }\n}\nexport default ServerError;","import React, { Component } from 'react';\nimport { getUserCreatedPosts, deletePost } from '../util/APIUtils';\nimport LoadingIndicator  from '../common/LoadingIndicator';\nimport { Button, Icon, notification, List } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport './PostList.css';\n\nclass PostList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts: [],\n            isLoading: false\n        };\n        this.loadPostList = this.loadPostList.bind(this);\n        this.handleDelete = this.handleDelete.bind(this)\n    }\n\n    loadPostList() {\n        let promise;\n        promise = getUserCreatedPosts(this.props.currentUser.id);\n        if(!promise) {\n            return;\n        }\n\n        this.setState({\n            isLoading: true\n        });\n        promise            \n        .then(response => {\n            this.setState({\n                posts: response,\n                isLoading: false\n            })\n        }).catch(error => {\n            this.setState({\n                isLoading: false\n            })\n        });  \n        \n    }\n\n    handleDelete(event, itemId) {        \n        event.preventDefault();\n        deletePost(this.props.currentUser.id, itemId);\n        this.setState({\n            posts : this.state.posts.filter(item => item.id !== itemId)\n        });\n        notification.success({\n            message: 'RunBook',\n            description: \"Thank you! You have successfully deleted a post!\",\n        });\n      }\n\n\n    componentDidMount() {\n        this.loadPostList();\n    }\n\n\n    render() {\n        return (\n            <div className=\"posts-container\">\n                {\n                    !this.state.isLoading && this.state.posts.length === 0 ? (\n                        <div className=\"no-posts-found\">\n                            <span>No Posts Found.</span>\n                        </div>    \n                    ): null\n                }  \n                {\n                    this.state.isLoading ? \n                    <LoadingIndicator />: null                     \n                }\n                <div className=\"posts-list-scroll\">\n                <List\n                    itemLayout=\"vertical\"\n                    size=\"large\"\n                    pagination={{\n                    pageSize: 5,\n                    }}\n                    dataSource={this.state.posts}\n                    renderItem={item => (\n                    <List.Item\n                        key={item.id}\n                        actions={[\n                        <Icon type=\"delete\" key=\"list-vertical-delete\" onClick = {(event) => this.handleDelete(event,item.id)}/>,\n                        ] } >\n                        <List.Item.Meta\n                        title={item.title}\n                        />\n                        {item.content}\n                    </List.Item>\n                    )}\n                />\n                \n                \n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(PostList);","import React, { Component } from 'react';\nimport RunList from '../../run/RunList';\nimport { getUserProfile } from '../../util/APIUtils';\nimport { Avatar, Tabs } from 'antd';\nimport { getAvatarColor } from '../../util/Colors';\nimport LoadingIndicator  from '../../common/LoadingIndicator';\nimport './Profile.css';\nimport NotFound from '../../common/NotFound';\nimport ServerError from '../../common/ServerError';\nimport PostList from '../../post/PostList';\n\nconst TabPane = Tabs.TabPane;\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: null,\n            isLoading: false\n        }\n        this.loadUserProfile = this.loadUserProfile.bind(this);\n    }\n\n    loadUserProfile(userId) {\n        this.setState({\n            isLoading: true\n        });\n\n        getUserProfile(userId)\n        .then(response => {\n            this.setState({\n                user: response,\n                isLoading: false\n            });\n        }).catch(error => {\n            if(error.status === 404) {\n                this.setState({\n                    notFound: true,\n                    isLoading: false\n                });\n            } else {\n                this.setState({\n                    serverError: true,\n                    isLoading: false\n                });        \n            }\n        });        \n    }\n      \n    componentDidMount() {\n        this.loadUserProfile(this.props.currentUser.id);        \n    }\n\n\n    render() {\n        if(this.state.isLoading) {\n            return <LoadingIndicator />;\n        }\n\n        if(this.state.notFound) {\n            return <NotFound />;\n        }\n\n        if(this.state.serverError) {\n            return <ServerError />;\n        }\n\n        const tabBarStyle = {\n            textAlign: 'center'\n        };\n\n        return (\n            <div className=\"profile\">\n                { \n                    this.state.user ? (\n                        <div className=\"user-profile\">\n                            <div className=\"user-details\">\n                                <div className=\"user-avatar\">\n                                    <Avatar className=\"user-avatar-circle\" style={{ backgroundColor: getAvatarColor(this.state.user.name)}}>\n                                        {this.state.user.name[0].toUpperCase()}\n                                    </Avatar>\n                                </div>\n                                <div className=\"user-summary\">\n                                    <div className=\"full-name\">{this.state.user.name}</div>\n                                    <div className=\"age\">Age: {this.state.user.age}</div>\n                                    <div className=\"location\">{this.state.user.location}</div>\n                                </div>\n                            </div>\n                            <div className=\"user-poll-details\">    \n                                <Tabs defaultActiveKey=\"1\" \n                                    animated={false}\n                                    tabBarStyle={tabBarStyle}\n                                    size=\"large\"\n                                    className=\"profile-tabs\">\n                                    <TabPane tab=\"User Run Events\" key=\"1\">\n                                        <RunList currentUser ={this.props.currentUser} userRun = {true} type=\"USER_PARTICIPATED_RUNS\" />\n                                    </TabPane>\n                                    <TabPane tab=\"All Run Events\" key=\"2\">\n                                        <RunList  currentUser ={this.props.currentUser} type=\"ALL_RUNS\" />\n                                    </TabPane>\n                                    <TabPane tab=\"Posts\" key=\"3\">\n                                        <PostList currentUser ={this.props.currentUser} />\n                                    </TabPane>\n                                </Tabs>\n                            </div>  \n                        </div>  \n                    ): null               \n                }\n            </div>\n        );\n    }\n}\n\nexport default Profile;","import React, { Component } from 'react';\nimport { editProfile } from '../../util/APIUtils';\nimport './EditProfile.css';  \nimport {loadCurrentUser} from '../../app/App'\nimport { \n    NAME_MIN_LENGTH, NAME_MAX_LENGTH, \n    LOCATION_MIN_LENGTH, LOCATION_MAX_LENGTH,\n    AGE_MAX ,AGE_MIN\n} from '../../constants';\nimport { Form, Input, Button, notification,InputNumber } from 'antd';\nconst FormItem = Form.Item;\nconst { TextArea } = Input\n\nclass EditProfile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: {\n                value: ''\n            },\n            location: {\n                value: ''\n            },\n            age: {\n                value: null\n            },\n            email: {\n                value: ''\n            },\n\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleAgeChange = this.handleAgeChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.isFormInvalid = this.isFormInvalid.bind(this);\n    }\n\n    handleInputChange(event, validationFun) {\n        const target = event.target;\n        const inputName = target.name;        \n        const inputValue = target.value;\n\n        this.setState({\n            [inputName] : {\n                value: inputValue,\n                ...validationFun(inputValue)\n            }\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const editData = {\n            name: this.state.name.value,\n            age: this.state.age.value,\n            location: this.state.location.value,\n            email: this.props.currentUser.email,\n            password: 'dummyValue'\n        };\n        editProfile(this.props.currentUser.id, editData) \n\n        .then(response => {\n            notification.success({\n                message: 'EditBook',\n                description: \"Thank you! You have successfully edited profile\",\n            });          \n            this.props.history.push(\"/mypage\");\n        }).catch(error => {\n            if(error.status === 401) {\n                this.props.handleLogout('/login', 'error', 'You have been logged out. Please login create edit.');    \n            } else {\n                notification.error({\n                    message: 'EditBook App',\n                    description: error.message || 'Sorry! Something went wrong. Please try again!'\n                });              \n            }\n        });\n    }\n\n    isFormInvalid() {\n        return !(this.state.name.validateStatus === 'success' &&\n            this.state.location.validateStatus === 'success' \n        );\n    }\n\n    componentDidMount(){\n        console.log(this.props)\n    }\n    \n    render() {\n\n        return (\n            <div className=\"new-edit-container\">\n                <h1 className=\"page-title\"> Edit Profile</h1>\n                <div className=\"new-edit-content\">\n                    <Form onSubmit={this.handleSubmit} className=\"create-edit-form\">\n                    <FormItem \n                            label=\"Full Name\"\n                            validateStatus={this.state.name.validateStatus}\n                            help={this.state.name.errorMsg}>\n                            <Input \n                                size=\"large\"\n                                name=\"name\"\n                                autoComplete=\"off\"\n                                placeholder={this.props.currentUser.name}\n                                value={this.state.name.value} \n                                onChange={(event) => this.handleInputChange(event, this.validateName)} />    \n                        </FormItem>\n                        <FormItem label=\"Location\"\n                            validateStatus={this.state.location.validateStatus}\n                            help={this.state.location.errorMsg}>\n                            <Input \n                                size=\"large\"\n                                name=\"location\" \n                                autoComplete=\"off\"\n                                placeholder={this.props.currentUser.location}\n                                value={this.state.location.value} \n                                onChange={(event) => this.handleInputChange(event, this.validateLocation)} />    \n                        </FormItem>\n                        <FormItem label=\"Age\"\n                            validateStatus={this.state.age.validateStatus}\n                            help={this.state.age.errorMsg}>\n                            <InputNumber \n                                size=\"large\"\n                                name=\"age\" \n                                type=\"number\" \n                                autoComplete=\"off\"\n                                placeholder={this.props.currentUser.age}\n                                value={this.state.age.value} \n                                onChange={this.handleAgeChange} />    \n                        </FormItem>\n                        <FormItem \n                            label=\"Email\"\n                            hasFeedback\n                            validateStatus={this.state.email.validateStatus}>\n                            <Input \n                                size=\"large\"\n                                name=\"email\" \n                                type=\"email\" \n                                autoComplete=\"off\"\n                                placeholder={this.props.currentUser.email}\n                                disabled = {true}\n                                />    \n                        </FormItem>\n                        <FormItem className=\"edit-form-row\">\n                            <Button type=\"primary\" \n                                htmlType=\"submit\" \n                                size=\"large\" \n                                disabled={this.isFormInvalid()}\n                                className=\"create-edit-form-button\">Create Edit</Button>\n                        </FormItem>\n                    </Form>\n                </div>    \n            </div>\n        );\n    }\n\n    // Validation Functions\n\nvalidateName = (name) => {\n    if(name.length < NAME_MIN_LENGTH) {\n        return {\n            validateStatus: 'error',\n            errorMsg: `Name is too short (Minimum ${NAME_MIN_LENGTH} characters needed.)`\n        }\n    } else if (name.length > NAME_MAX_LENGTH) {\n        return {\n            validationStatus: 'error',\n            errorMsg: `Name is too long (Maximum ${NAME_MAX_LENGTH} characters allowed.)`\n        }\n    } else {\n        return {\n            validateStatus: 'success',\n            errorMsg: null,\n          };            \n    }\n}\n\n\nvalidateLocation = (location) => {\n    if(location.length < LOCATION_MIN_LENGTH) {\n        return {\n            validateStatus: 'error',\n            errorMsg: `location is too short (Minimum ${LOCATION_MIN_LENGTH} characters needed.)`\n        }\n    } else if (location.length > LOCATION_MAX_LENGTH) {\n        return {\n            validationStatus: 'error',\n            errorMsg: `Location is too long (Maximum ${LOCATION_MAX_LENGTH} characters allowed.)`\n        }\n    } else {\n        return {\n            validateStatus: 'success',\n            errorMsg: null\n        }\n    }\n}\n\nhandleAgeChange(inputValue) {\n    const inputName = 'age';       \n    this.setState({\n        [inputName] : {\n            value: inputValue,\n            ...this.validateAge(inputValue)\n        }\n    });\n}\n\nvalidateAge = (age) => {\n    if(age < AGE_MIN) {\n        return {\n            validateStatus: 'error',\n            errorMsg: `Age is too short (Minimum ${AGE_MIN}  needed.)`\n        }\n    } else if (age > AGE_MAX) {\n        return {\n            validationStatus: 'error',\n            errorMsg: `Age is too much (Maximum ${AGE_MAX} allowed.)`\n        }\n    } else {\n        return {\n            validateStatus: 'success',\n            errorMsg: null\n        }\n    }\n}\n\n}\n\n\n\n\nexport default EditProfile;","import React, { Component } from 'react';\nimport {\n    Link,\n    withRouter\n} from 'react-router-dom';\nimport './AppHeader.css';\nimport pollIcon from '../poll.svg';\nimport { Layout, Menu, Dropdown, Icon } from 'antd';\nconst Header = Layout.Header;\n    \nclass AppHeader extends Component {\n    constructor(props) {\n        super(props);   \n        this.handleMenuClick = this.handleMenuClick.bind(this);   \n    }\n\n    handleMenuClick({ key }) {\n      if(key === \"logout\") {\n        this.props.onLogout();\n      }\n    }\n\n    render() {\n        let menuItems;\n        if(this.props.currentUser != null) {\n          menuItems = [\n            <Menu.Item key=\"/\">\n              <Link to=\"/mypage\">\n                <Icon type=\"home\" className=\"nav-icon\" />\n              </Link>\n            </Menu.Item>,\n            <Menu.Item key=\"/runs\">\n            <Link to=\"/runs\">\n              <img src={pollIcon} alt=\"run\" className=\"poll-icon\" />  New Run\n            </Link>\n          </Menu.Item>,\n            <Menu.Item key=\"/posts\">\n            <Link to=\"/posts\">\n              <img src={pollIcon} alt=\"post\" className=\"poll-icon\" />  New Post\n            </Link>\n          </Menu.Item>,\n          <Menu.Item key=\"/profile\" className=\"profile-menu\">\n                <ProfileDropdownMenu \n                  currentUser={this.props.currentUser} \n                  handleMenuClick={this.handleMenuClick}/>\n            </Menu.Item>\n          ]; \n        } else {\n          menuItems = [\n            <Menu.Item key=\"/login\">\n              <Link to=\"/login\">Login</Link>\n            </Menu.Item>,\n            <Menu.Item key=\"/signup\">\n              <Link to=\"/signup\">Signup</Link>\n            </Menu.Item>                  \n          ];\n        }\n\n        return (\n            <Header className=\"app-header\">\n            <div className=\"container\">\n              <div className=\"app-title\" >\n                <Link to=\"/\">RunBook</Link>\n              </div>\n              <Menu\n                className=\"app-menu\"\n                mode=\"horizontal\"\n                selectedKeys={[this.props.location.pathname]}\n                style={{ lineHeight: '64px' }} >\n                  {menuItems}\n              </Menu>\n            </div>\n          </Header>\n        );\n    }\n}\n\nfunction ProfileDropdownMenu(props) {\n  const dropdownMenu = (\n    <Menu onClick={props.handleMenuClick} className=\"profile-dropdown-menu\">\n      <Menu.Item key=\"user-info\" className=\"dropdown-item\" disabled>\n        <div className=\"user-full-name-info\">\n          {props.currentUser.name}\n        </div>\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item key=\"profile\" className=\"dropdown-item\">\n        <Link to = {`/editprofile`} >Edit Profile</Link>\n      </Menu.Item>\n      <Menu.Item key=\"logout\" className=\"dropdown-item\">\n        Logout\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Dropdown \n      overlay={dropdownMenu} \n      trigger={['click']}\n      getPopupContainer = { () => document.getElementsByClassName('profile-menu')[0]}>\n      <a className=\"ant-dropdown-link\">\n         <Icon type=\"user\" className=\"nav-icon\" style={{marginRight: 0}} /> <Icon type=\"down\" />\n      </a>\n    </Dropdown>\n  );\n}\n\n\nexport default withRouter(AppHeader);","import React from 'react';\nimport {\n    Route,\n    Redirect\n  } from \"react-router-dom\";\n  \n  \nconst PrivateRoute = ({ component: Component, authenticated, ...rest }) => (\n    <Route\n      {...rest}\n      render={props =>\n        authenticated ? (\n          <Component {...rest} {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n);\n  \nexport default PrivateRoute","import React, { Component } from 'react';\nimport './App.css';\nimport {\n  Route,\n  withRouter,\n  Switch,\n  Redirect\n} from 'react-router-dom';\n\nimport { getCurrentUser } from '../util/APIUtils';\nimport { ACCESS_TOKEN } from '../constants';\n\nimport Runlist from '../run/RunList';\nimport NewRun from '../run/NewRun';\nimport NewPost from '../post/NewPost';\nimport Login from '../user/login/Login';\nimport Signup from '../user/signup/Signup';\nimport Profile from '../user/profile/Profile';\nimport EditProfile from '../user/profile/EditProfile';\nimport AppHeader from '../common/AppHeader';\nimport NotFound from '../common/NotFound';\nimport LoadingIndicator from '../common/LoadingIndicator';\nimport PrivateRoute from '../common/PrivateRoute';\n\nimport { Layout, notification } from 'antd';\nconst { Content } = Layout;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      isAuthenticated: false,\n      isLoading: false,\n    }\n    this.handleLogout = this.handleLogout.bind(this);\n    this.loadCurrentUser = this.loadCurrentUser.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n\n    notification.config({\n      placement: 'topRight',\n      top: 70,\n      duration: 3,\n    });    \n  }\n\n  loadCurrentUser() {\n    this.setState({\n      isLoading: true\n    });\n    getCurrentUser()\n    .then(response => {\n      this.setState({\n        currentUser: Object.assign({}, response),\n        isAuthenticated: true,\n        isLoading: false\n      });\n    }).catch(error => {\n      this.setState({\n        isLoading: false\n      });  \n    });\n  }\n\n\n\n  handleLogout(redirectTo=\"/\", notificationType=\"success\", description=\"You're successfully logged out.\") {\n    localStorage.removeItem(ACCESS_TOKEN);\n    localStorage.removeItem('userId');\n\n    this.setState({\n      currentUser: null,\n      isAuthenticated: false\n    });\n\n    this.props.history.push(redirectTo);\n    \n    notification[notificationType]({\n      message: 'RunBook App',\n      description: description,\n    });\n  }\n\n  componentWillMount(){\n    this.loadCurrentUser();\n  }\n\n  handleLogin() {\n    notification.success({\n      message: 'RunBook App',\n      description: \"You're successfully logged in.\",\n    });\n    this.loadCurrentUser();   \n    this.props.history.push(\"/\");\n  }\n\n  render() {\n    if(this.state.isLoading) {\n      return <LoadingIndicator />\n    }\n    return (\n        <Layout className=\"app-container\">\n          <AppHeader isAuthenticated={this.state.isAuthenticated} \n            currentUser={this.state.currentUser} \n            onLogout={this.handleLogout} />\n\n          <Content className=\"app-content\">\n            <div className=\"container\">\n              <Switch>      \n                <Route exact path=\"/\" \n                  render={(props) => <Runlist {...props} />}>\n                </Route>\n                <Route path=\"/login\" \n                  render={(props) => <Login onLogin={this.handleLogin} {...props} />}></Route>\n                <Route path=\"/signup\" component={Signup}></Route>\n                <PrivateRoute path=\"/mypage\" component={Profile} authenticated={this.state.isAuthenticated} handleLogout={this.handleLogout} currentUser={this.state.currentUser} >\n                </PrivateRoute>\n                <PrivateRoute authenticated={this.state.isAuthenticated} path=\"/runs\" component={NewRun} handleLogout={this.handleLogout} currentUser={this.state.currentUser} ></PrivateRoute>\n                <PrivateRoute authenticated={this.state.isAuthenticated} path=\"/posts\" component={NewPost} handleLogout={this.handleLogout} currentUser={this.state.currentUser} ></PrivateRoute>\n                <PrivateRoute authenticated={this.state.isAuthenticated} path=\"/editprofile\" component={EditProfile} handleLogout={this.handleLogout} currentUser={this.state.currentUser} ></PrivateRoute>\n                <Route component={NotFound}></Route>\n              </Switch>\n            </div>\n          </Content>\n        </Layout>\n    );\n  }\n}\n\nexport default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, \n    document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}